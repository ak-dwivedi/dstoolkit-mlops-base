name: Invoke AML Pipeline

on:
  push:
    branches:
      - main
#   workflow_run:
#     workflows: [mlops-train-collab-model-test]
#     types:
#         - completed

jobs:

    data:
      runs-on: ubuntu-latest
      # runs-on: [self-hosted, dataanalyticsrunner]
      environment: dev
      steps:
  
        #############
        ##  Setup  ##
        #############
  
        - name: "[Setup] Azure login"
          uses: azure/login@v1
          with:
            creds: '{
              "clientId": "${{ secrets.ARM_CLIENT_ID_NON_PROD }}",
              "clientSecret": "${{ secrets.ARM_CLIENT_SECRET_NON_PROD }}",
              "subscriptionId": "d3d15f58-6f9f-436c-8796-24a2fd520d66",
              "tenantId": "${{ secrets.ARM_TENANT_ID }}"
              }'
        - name: "[Setup] Set default AML workspace"
          run: az configure --defaults workspace="${{ secrets.AML_WORKSPACE_NAME }}" group="${{ secrets.AML_RG_NAME }}"
        - name: "[Setup] Checkout repo"
          uses: actions/checkout@v4
  
        - name: Set up Python
          uses: actions/setup-python@v2
          with:
            python-version: 3.8
  
        - name: Set up Python 3.9
          uses: actions/setup-python@v2
          with:
            python-version: 3.9
  
        - name: Install dependencies
          run: |
            python -m pip install --upgrade pip
            pip install azureml-sdk==1.54.0
            pip install PyYAML
            pip install ruamel.yaml==0.18.5
            pip install azureml-defaults
            pip install azure-ai-ml
            pip install azureml-pipeline
            pip install azureml-pipeline-steps
            pip install dotnetcore2==3.1.23
            pip install joblib
            pip install pandas
            # pip install azureml-dataprep==5.1.0
            # pip install azureml-dataprep-native
  
  
        ################
        ##  Training  ##
        ################
        - name: Setup Data Paths
          run: |
            # Define datastore (get default)
            az extension add -n azure-cli-ml
            workspace_params="--workspace-name ${{ secrets.AML_WORKSPACE_NAME }} --resource-group ${{ secrets.AML_RG_NAME }}"
            datastore=$(az ml datastore show-default $workspace_params --query name -o tsv)
            # Define target path
            # target_path="${{ secrets.DATA_PATH }}_$(date +"%Y%m%d-%H%M%S")"
            target_path="mydataset_$(date +"%Y%m%d-%H%M%S")"
            echo "::set-output name=datastore::$datastore"
            echo "::set-output name=datapath::$target_path"
          shell: bash
          env:
            AZURE_CORE_LOGGING_ENABLE_AZURE_TELEMETRY: "false"
        
        
        - name: "Train"
          run: |
            python $GITHUB_WORKSPACE/src/snapshot_data.py
          env:
            servicePrincipalId: "${{ secrets.ARM_CLIENT_ID_NON_PROD }}"
            servicePrincipalKey: "${{ secrets.ARM_CLIENT_SECRET_NON_PROD }}"
            tenantId: "${{ secrets.ARM_TENANT_ID }}"
            AMLWORKSPACE: "amlpoc02"
            RESOURCE_GROUP: "amlpoc02"
            SUBSCRIPTION_ID: "d3d15f58-6f9f-436c-8796-24a2fd520d66"
            datastore: $datastore 
            path: $target_path

        - name: "Register Data"
          run: |
            python $GITHUB_WORKSPACE/mlops/register_dataset.py.py
          env:
            servicePrincipalId: "${{ secrets.ARM_CLIENT_ID_NON_PROD }}"
            servicePrincipalKey: "${{ secrets.ARM_CLIENT_SECRET_NON_PROD }}"
            tenantId: "${{ secrets.ARM_TENANT_ID }}"
            AMLWORKSPACE: "amlpoc02"
            RESOURCE_GROUP: "amlpoc02"
            SUBSCRIPTION_ID: "d3d15f58-6f9f-436c-8796-24a2fd520d66"
            name: mydataset 
            datastore: workspaceblobstore 
            path: mydataset