# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    # - uses: actions/checkout@v3
    # - name: Set up Python 3.10
    #   uses: actions/setup-python@v3
    #   with:
    #     python-version: "3.10"
    - uses: actions/checkout@v2
    - name: Setup Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ env.PYTHON_VERSION }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest codecov pydocstyle pytest-cov pylint==2.17.7 pylint_junit flake8==3.7.* flake8_formatter_junit_xml==0.0.*
        # python -m pip install --upgrade pip
        # pip install flake8 pytest
        # if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Install project requirements
      run: pip install -r requirements.txt
    - name: Run code quality tests (Flake8)
      run: flake8 --output-file=flake8-testresults.xml --format junit-xml --exit-zero
    - name: Run code quality tests (Pylint)
      run: pylint src/ --output-format=pylint_junit.JUnitReporter --exit-zero > pylint-testresults.xml
    # - name: Run all unit tests
    #   run: |
    #     if [ ${{ env.ls mlops/tests/ | grep -e "^test_.*.py" | head -n 1 }} ]; then
    #       pytest -v mlops/tests/ --doctest-modules --junitxml=unit-testresults.xml --cov=src --cov-append --cov-report=xml:coverage.xml --cov-report=html:htmlcov
    #     fi
    
    # - name: Lint with flake8
    #   run: |
    #     # stop the build if there are Python syntax errors or undefined names
    #     flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
    #     # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
    #     flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        pytest
